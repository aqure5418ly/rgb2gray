// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_TVALID,
        dst_TREADY,
        mul_ln4,
        src_TDATA,
        src_TREADY,
        src_TKEEP,
        src_TSTRB,
        src_TLAST,
        dst_TDATA,
        dst_TVALID,
        dst_TKEEP,
        dst_TSTRB,
        dst_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   src_TVALID;
input   dst_TREADY;
input  [59:0] mul_ln4;
input  [31:0] src_TDATA;
output   src_TREADY;
input  [3:0] src_TKEEP;
input  [3:0] src_TSTRB;
input  [0:0] src_TLAST;
output  [7:0] dst_TDATA;
output   dst_TVALID;
output  [0:0] dst_TKEEP;
output  [0:0] dst_TSTRB;
output  [0:0] dst_TLAST;

reg ap_idle;
reg src_TREADY;
reg dst_TVALID;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage15;
reg   [0:0] icmp_ln16_reg_247;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_state32_pp0_stage15_iter1;
reg    ap_block_pp0_stage15_subdone;
reg    ap_condition_exit_pp0_iter0_stage15;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    src_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire   [0:0] icmp_ln16_fu_155_p2;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage0;
reg    dst_TDATA_blk_n;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state17_pp0_stage0_iter1;
reg    ap_block_state33_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state18_pp0_stage1_iter1;
reg    ap_block_state34_pp0_stage1_iter2;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln16_reg_247_pp0_iter1_reg;
reg   [7:0] rgb_tmp_r_reg_251;
reg   [7:0] rgb_tmp_g_reg_256;
wire   [7:0] rgb_tmp_b_fu_166_p1;
reg   [7:0] rgb_tmp_b_reg_261;
reg   [7:0] rgb_tmp_r_1_reg_266;
reg    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state19_pp0_stage2_iter1;
reg    ap_block_state35_pp0_stage2_iter2;
reg    ap_block_pp0_stage2_11001;
reg   [7:0] rgb_tmp_g_1_reg_271;
wire   [7:0] rgb_tmp_b_1_fu_175_p1;
reg   [7:0] rgb_tmp_b_1_reg_276;
reg   [7:0] rgb_tmp_r_2_reg_281;
reg    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state20_pp0_stage3_iter1;
reg    ap_block_state36_pp0_stage3_iter2;
reg    ap_block_pp0_stage3_11001;
reg   [7:0] rgb_tmp_g_2_reg_286;
wire   [7:0] rgb_tmp_b_2_fu_179_p1;
reg   [7:0] rgb_tmp_b_2_reg_291;
reg   [7:0] rgb_tmp_r_3_reg_296;
reg    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state21_pp0_stage4_iter1;
reg    ap_block_state37_pp0_stage4_iter2;
reg    ap_block_pp0_stage4_11001;
reg   [7:0] rgb_tmp_g_3_reg_301;
wire   [7:0] rgb_tmp_b_3_fu_183_p1;
reg   [7:0] rgb_tmp_b_3_reg_306;
reg   [7:0] rgb_tmp_r_4_reg_311;
reg    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state22_pp0_stage5_iter1;
reg    ap_block_state38_pp0_stage5_iter2;
reg    ap_block_pp0_stage5_11001;
reg   [7:0] rgb_tmp_g_4_reg_316;
wire   [7:0] rgb_tmp_b_4_fu_187_p1;
reg   [7:0] rgb_tmp_b_4_reg_321;
reg   [7:0] rgb_tmp_r_5_reg_326;
reg    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state23_pp0_stage6_iter1;
reg    ap_block_state39_pp0_stage6_iter2;
reg    ap_block_pp0_stage6_11001;
reg   [7:0] rgb_tmp_g_5_reg_331;
wire   [7:0] rgb_tmp_b_5_fu_191_p1;
reg   [7:0] rgb_tmp_b_5_reg_336;
reg   [7:0] rgb_tmp_r_6_reg_341;
reg    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state24_pp0_stage7_iter1;
reg    ap_block_state40_pp0_stage7_iter2;
reg    ap_block_pp0_stage7_11001;
reg   [7:0] rgb_tmp_g_6_reg_346;
wire   [7:0] rgb_tmp_b_6_fu_195_p1;
reg   [7:0] rgb_tmp_b_6_reg_351;
reg   [7:0] rgb_tmp_r_7_reg_356;
reg    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state25_pp0_stage8_iter1;
reg    ap_block_state41_pp0_stage8_iter2;
reg    ap_block_pp0_stage8_11001;
reg   [7:0] rgb_tmp_g_7_reg_361;
wire   [7:0] rgb_tmp_b_7_fu_199_p1;
reg   [7:0] rgb_tmp_b_7_reg_366;
reg   [7:0] rgb_tmp_r_8_reg_371;
reg    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state26_pp0_stage9_iter1;
reg    ap_block_state42_pp0_stage9_iter2;
reg    ap_block_pp0_stage9_11001;
reg   [7:0] rgb_tmp_g_8_reg_376;
wire   [7:0] rgb_tmp_b_8_fu_203_p1;
reg   [7:0] rgb_tmp_b_8_reg_381;
reg   [7:0] rgb_tmp_r_9_reg_386;
reg    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state27_pp0_stage10_iter1;
reg    ap_block_state43_pp0_stage10_iter2;
reg    ap_block_pp0_stage10_11001;
reg   [7:0] rgb_tmp_g_9_reg_391;
wire   [7:0] rgb_tmp_b_9_fu_207_p1;
reg   [7:0] rgb_tmp_b_9_reg_396;
reg   [7:0] rgb_tmp_r_10_reg_401;
reg    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state28_pp0_stage11_iter1;
reg    ap_block_state44_pp0_stage11_iter2;
reg    ap_block_pp0_stage11_11001;
reg   [7:0] rgb_tmp_g_10_reg_406;
wire   [7:0] rgb_tmp_b_10_fu_211_p1;
reg   [7:0] rgb_tmp_b_10_reg_411;
reg   [7:0] rgb_tmp_r_11_reg_416;
reg    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state29_pp0_stage12_iter1;
reg    ap_block_state45_pp0_stage12_iter2;
reg    ap_block_pp0_stage12_11001;
reg   [7:0] rgb_tmp_g_11_reg_421;
wire   [7:0] rgb_tmp_b_11_fu_215_p1;
reg   [7:0] rgb_tmp_b_11_reg_426;
reg   [7:0] rgb_tmp_r_12_reg_431;
reg    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state30_pp0_stage13_iter1;
reg    ap_block_state46_pp0_stage13_iter2;
reg    ap_block_pp0_stage13_11001;
reg   [7:0] rgb_tmp_g_12_reg_436;
wire   [7:0] rgb_tmp_b_12_fu_219_p1;
reg   [7:0] rgb_tmp_b_12_reg_441;
reg   [7:0] rgb_tmp_r_13_reg_446;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_state31_pp0_stage14_iter1;
reg    ap_block_pp0_stage14_11001;
reg   [7:0] rgb_tmp_g_13_reg_451;
wire   [7:0] rgb_tmp_b_13_fu_223_p1;
reg   [7:0] rgb_tmp_b_13_reg_456;
reg   [7:0] rgb_tmp_r_14_reg_461;
reg    ap_block_pp0_stage15_11001;
reg   [7:0] rgb_tmp_g_14_reg_466;
wire   [7:0] rgb_tmp_b_14_fu_227_p1;
reg   [7:0] rgb_tmp_b_14_reg_471;
reg   [7:0] rgb_tmp_r_15_reg_476;
reg   [7:0] rgb_tmp_g_15_reg_481;
wire   [7:0] rgb_tmp_b_15_fu_231_p1;
reg   [7:0] rgb_tmp_b_15_reg_486;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage13_subdone;
reg   [7:0] grp_rgb2gray_pixel_fu_115_rgb_val_r;
reg   [7:0] grp_rgb2gray_pixel_fu_115_rgb_val_g;
reg   [7:0] grp_rgb2gray_pixel_fu_115_rgb_val_b;
wire   [7:0] grp_rgb2gray_pixel_fu_115_ap_return;
reg    grp_rgb2gray_pixel_fu_115_ap_ce;
reg    ap_block_state2_pp0_stage1_iter0_ignore_call83;
wire    ap_block_state18_pp0_stage1_iter1_ignore_call83;
reg    ap_block_state34_pp0_stage1_iter2_ignore_call83;
reg    ap_block_pp0_stage1_11001_ignoreCallOp261;
reg    ap_block_state3_pp0_stage2_iter0_ignore_call83;
wire    ap_block_state19_pp0_stage2_iter1_ignore_call83;
reg    ap_block_state35_pp0_stage2_iter2_ignore_call83;
reg    ap_block_pp0_stage2_11001_ignoreCallOp71;
reg    ap_block_state4_pp0_stage3_iter0_ignore_call83;
wire    ap_block_state20_pp0_stage3_iter1_ignore_call83;
reg    ap_block_state36_pp0_stage3_iter2_ignore_call83;
reg    ap_block_pp0_stage3_11001_ignoreCallOp77;
reg    ap_block_state5_pp0_stage4_iter0_ignore_call83;
wire    ap_block_state21_pp0_stage4_iter1_ignore_call83;
reg    ap_block_state37_pp0_stage4_iter2_ignore_call83;
reg    ap_block_pp0_stage4_11001_ignoreCallOp84;
reg    ap_block_state6_pp0_stage5_iter0_ignore_call83;
wire    ap_block_state22_pp0_stage5_iter1_ignore_call83;
reg    ap_block_state38_pp0_stage5_iter2_ignore_call83;
reg    ap_block_pp0_stage5_11001_ignoreCallOp92;
reg    ap_block_state7_pp0_stage6_iter0_ignore_call83;
wire    ap_block_state23_pp0_stage6_iter1_ignore_call83;
reg    ap_block_state39_pp0_stage6_iter2_ignore_call83;
reg    ap_block_pp0_stage6_11001_ignoreCallOp101;
reg    ap_block_state8_pp0_stage7_iter0_ignore_call83;
wire    ap_block_state24_pp0_stage7_iter1_ignore_call83;
reg    ap_block_state40_pp0_stage7_iter2_ignore_call83;
reg    ap_block_pp0_stage7_11001_ignoreCallOp111;
reg    ap_block_state9_pp0_stage8_iter0_ignore_call83;
wire    ap_block_state25_pp0_stage8_iter1_ignore_call83;
reg    ap_block_state41_pp0_stage8_iter2_ignore_call83;
reg    ap_block_pp0_stage8_11001_ignoreCallOp122;
reg    ap_block_state10_pp0_stage9_iter0_ignore_call83;
wire    ap_block_state26_pp0_stage9_iter1_ignore_call83;
reg    ap_block_state42_pp0_stage9_iter2_ignore_call83;
reg    ap_block_pp0_stage9_11001_ignoreCallOp134;
reg    ap_block_state11_pp0_stage10_iter0_ignore_call83;
wire    ap_block_state27_pp0_stage10_iter1_ignore_call83;
reg    ap_block_state43_pp0_stage10_iter2_ignore_call83;
reg    ap_block_pp0_stage10_11001_ignoreCallOp147;
reg    ap_block_state12_pp0_stage11_iter0_ignore_call83;
wire    ap_block_state28_pp0_stage11_iter1_ignore_call83;
reg    ap_block_state44_pp0_stage11_iter2_ignore_call83;
reg    ap_block_pp0_stage11_11001_ignoreCallOp161;
reg    ap_block_state13_pp0_stage12_iter0_ignore_call83;
wire    ap_block_state29_pp0_stage12_iter1_ignore_call83;
reg    ap_block_state45_pp0_stage12_iter2_ignore_call83;
reg    ap_block_pp0_stage12_11001_ignoreCallOp176;
reg    ap_block_state14_pp0_stage13_iter0_ignore_call83;
wire    ap_block_state30_pp0_stage13_iter1_ignore_call83;
reg    ap_block_state46_pp0_stage13_iter2_ignore_call83;
reg    ap_block_pp0_stage13_11001_ignoreCallOp192;
reg    ap_block_state15_pp0_stage14_iter0_ignore_call83;
reg    ap_block_state31_pp0_stage14_iter1_ignore_call83;
reg    ap_block_pp0_stage14_11001_ignoreCallOp209;
reg    ap_block_state16_pp0_stage15_iter0_ignore_call83;
reg    ap_block_state32_pp0_stage15_iter1_ignore_call83;
reg    ap_block_pp0_stage15_11001_ignoreCallOp227;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call83;
reg    ap_block_state17_pp0_stage0_iter1_ignore_call83;
reg    ap_block_state33_pp0_stage0_iter2_ignore_call83;
reg    ap_block_pp0_stage0_11001_ignoreCallOp246;
reg   [59:0] indvar_flatten_fu_74;
wire   [59:0] add_ln16_fu_160_p2;
wire    ap_loop_init;
reg    ap_block_pp0_stage14_01001;
reg    ap_block_pp0_stage15_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_pp0_stage5_01001;
reg    ap_block_pp0_stage6_01001;
reg    ap_block_pp0_stage7_01001;
reg    ap_block_pp0_stage8_01001;
reg    ap_block_pp0_stage9_01001;
reg    ap_block_pp0_stage10_01001;
reg    ap_block_pp0_stage11_01001;
reg    ap_block_pp0_stage12_01001;
reg    ap_block_pp0_stage13_01001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage13;
reg    ap_idle_pp0_0to0;
reg   [15:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
reg    ap_done_pending_pp0;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

top_rgb2gray_pixel grp_rgb2gray_pixel_fu_115(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .rgb_val_r(grp_rgb2gray_pixel_fu_115_rgb_val_r),
    .rgb_val_g(grp_rgb2gray_pixel_fu_115_rgb_val_g),
    .rgb_val_b(grp_rgb2gray_pixel_fu_115_rgb_val_b),
    .ap_return(grp_rgb2gray_pixel_fu_115_ap_return),
    .ap_ce(grp_rgb2gray_pixel_fu_115_ap_ce)
);

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage15),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage15)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage13_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter1_stage13) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_fu_74 <= 60'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln16_fu_155_p2 == 1'd0))) begin
        indvar_flatten_fu_74 <= add_ln16_fu_160_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln16_reg_247 <= icmp_ln16_fu_155_p2;
        icmp_ln16_reg_247_pp0_iter1_reg <= icmp_ln16_reg_247;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln16_reg_247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        rgb_tmp_b_10_reg_411 <= rgb_tmp_b_10_fu_211_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln16_reg_247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        rgb_tmp_b_11_reg_426 <= rgb_tmp_b_11_fu_215_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln16_reg_247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        rgb_tmp_b_12_reg_441 <= rgb_tmp_b_12_fu_219_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln16_reg_247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        rgb_tmp_b_13_reg_456 <= rgb_tmp_b_13_fu_223_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln16_reg_247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        rgb_tmp_b_14_reg_471 <= rgb_tmp_b_14_fu_227_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln16_reg_247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rgb_tmp_b_15_reg_486 <= rgb_tmp_b_15_fu_231_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln16_reg_247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        rgb_tmp_b_1_reg_276 <= rgb_tmp_b_1_fu_175_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln16_reg_247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        rgb_tmp_b_2_reg_291 <= rgb_tmp_b_2_fu_179_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln16_reg_247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        rgb_tmp_b_3_reg_306 <= rgb_tmp_b_3_fu_183_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln16_reg_247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        rgb_tmp_b_4_reg_321 <= rgb_tmp_b_4_fu_187_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln16_reg_247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        rgb_tmp_b_5_reg_336 <= rgb_tmp_b_5_fu_191_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln16_reg_247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        rgb_tmp_b_6_reg_351 <= rgb_tmp_b_6_fu_195_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln16_reg_247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        rgb_tmp_b_7_reg_366 <= rgb_tmp_b_7_fu_199_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln16_reg_247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        rgb_tmp_b_8_reg_381 <= rgb_tmp_b_8_fu_203_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln16_reg_247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        rgb_tmp_b_9_reg_396 <= rgb_tmp_b_9_fu_207_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln16_fu_155_p2 == 1'd0))) begin
        rgb_tmp_b_reg_261 <= rgb_tmp_b_fu_166_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        rgb_tmp_g_10_reg_406 <= {{src_TDATA[15:8]}};
        rgb_tmp_r_10_reg_401 <= {{src_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        rgb_tmp_g_11_reg_421 <= {{src_TDATA[15:8]}};
        rgb_tmp_r_11_reg_416 <= {{src_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        rgb_tmp_g_12_reg_436 <= {{src_TDATA[15:8]}};
        rgb_tmp_r_12_reg_431 <= {{src_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        rgb_tmp_g_13_reg_451 <= {{src_TDATA[15:8]}};
        rgb_tmp_r_13_reg_446 <= {{src_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        rgb_tmp_g_14_reg_466 <= {{src_TDATA[15:8]}};
        rgb_tmp_r_14_reg_461 <= {{src_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rgb_tmp_g_15_reg_481 <= {{src_TDATA[15:8]}};
        rgb_tmp_r_15_reg_476 <= {{src_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        rgb_tmp_g_1_reg_271 <= {{src_TDATA[15:8]}};
        rgb_tmp_r_1_reg_266 <= {{src_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        rgb_tmp_g_2_reg_286 <= {{src_TDATA[15:8]}};
        rgb_tmp_r_2_reg_281 <= {{src_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        rgb_tmp_g_3_reg_301 <= {{src_TDATA[15:8]}};
        rgb_tmp_r_3_reg_296 <= {{src_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        rgb_tmp_g_4_reg_316 <= {{src_TDATA[15:8]}};
        rgb_tmp_r_4_reg_311 <= {{src_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        rgb_tmp_g_5_reg_331 <= {{src_TDATA[15:8]}};
        rgb_tmp_r_5_reg_326 <= {{src_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        rgb_tmp_g_6_reg_346 <= {{src_TDATA[15:8]}};
        rgb_tmp_r_6_reg_341 <= {{src_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        rgb_tmp_g_7_reg_361 <= {{src_TDATA[15:8]}};
        rgb_tmp_r_7_reg_356 <= {{src_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        rgb_tmp_g_8_reg_376 <= {{src_TDATA[15:8]}};
        rgb_tmp_r_8_reg_371 <= {{src_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        rgb_tmp_g_9_reg_391 <= {{src_TDATA[15:8]}};
        rgb_tmp_r_9_reg_386 <= {{src_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln16_fu_155_p2 == 1'd0))) begin
        rgb_tmp_g_reg_256 <= {{src_TDATA[15:8]}};
        rgb_tmp_r_reg_251 <= {{src_TDATA[23:16]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_subdone) & (icmp_ln16_reg_247 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_condition_exit_pp0_iter0_stage15 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage13_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln16_reg_247_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        ap_condition_exit_pp0_iter1_stage13 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        dst_TDATA_blk_n = dst_TREADY;
    end else begin
        dst_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        dst_TVALID = 1'b1;
    end else begin
        dst_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp261) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp246) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_11001_ignoreCallOp227) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001_ignoreCallOp209) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001_ignoreCallOp192) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001_ignoreCallOp176) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001_ignoreCallOp161) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001_ignoreCallOp147) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001_ignoreCallOp134) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001_ignoreCallOp122) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp111) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001_ignoreCallOp101) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp92) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp84) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp77) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp71) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_rgb2gray_pixel_fu_115_ap_ce = 1'b1;
    end else begin
        grp_rgb2gray_pixel_fu_115_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = rgb_tmp_b_15_reg_486;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = rgb_tmp_b_14_reg_471;
    end else if (((1'b0 == ap_block_pp0_stage15) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = rgb_tmp_b_13_reg_456;
    end else if (((1'b0 == ap_block_pp0_stage14) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = rgb_tmp_b_12_reg_441;
    end else if (((1'b0 == ap_block_pp0_stage13) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = rgb_tmp_b_11_reg_426;
    end else if (((1'b0 == ap_block_pp0_stage12) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = rgb_tmp_b_10_reg_411;
    end else if (((1'b0 == ap_block_pp0_stage11) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = rgb_tmp_b_9_reg_396;
    end else if (((1'b0 == ap_block_pp0_stage10) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = rgb_tmp_b_8_reg_381;
    end else if (((1'b0 == ap_block_pp0_stage9) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = rgb_tmp_b_7_reg_366;
    end else if (((1'b0 == ap_block_pp0_stage8) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = rgb_tmp_b_6_reg_351;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = rgb_tmp_b_5_reg_336;
    end else if (((1'b0 == ap_block_pp0_stage6) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = rgb_tmp_b_4_reg_321;
    end else if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = rgb_tmp_b_3_reg_306;
    end else if (((1'b0 == ap_block_pp0_stage4) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = rgb_tmp_b_2_reg_291;
    end else if (((1'b0 == ap_block_pp0_stage3) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = rgb_tmp_b_1_reg_276;
    end else if (((1'b0 == ap_block_pp0_stage2) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = rgb_tmp_b_reg_261;
    end else begin
        grp_rgb2gray_pixel_fu_115_rgb_val_b = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = rgb_tmp_g_15_reg_481;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = rgb_tmp_g_14_reg_466;
    end else if (((1'b0 == ap_block_pp0_stage15) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = rgb_tmp_g_13_reg_451;
    end else if (((1'b0 == ap_block_pp0_stage14) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = rgb_tmp_g_12_reg_436;
    end else if (((1'b0 == ap_block_pp0_stage13) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = rgb_tmp_g_11_reg_421;
    end else if (((1'b0 == ap_block_pp0_stage12) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = rgb_tmp_g_10_reg_406;
    end else if (((1'b0 == ap_block_pp0_stage11) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = rgb_tmp_g_9_reg_391;
    end else if (((1'b0 == ap_block_pp0_stage10) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = rgb_tmp_g_8_reg_376;
    end else if (((1'b0 == ap_block_pp0_stage9) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = rgb_tmp_g_7_reg_361;
    end else if (((1'b0 == ap_block_pp0_stage8) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = rgb_tmp_g_6_reg_346;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = rgb_tmp_g_5_reg_331;
    end else if (((1'b0 == ap_block_pp0_stage6) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = rgb_tmp_g_4_reg_316;
    end else if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = rgb_tmp_g_3_reg_301;
    end else if (((1'b0 == ap_block_pp0_stage4) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = rgb_tmp_g_2_reg_286;
    end else if (((1'b0 == ap_block_pp0_stage3) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = rgb_tmp_g_1_reg_271;
    end else if (((1'b0 == ap_block_pp0_stage2) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = rgb_tmp_g_reg_256;
    end else begin
        grp_rgb2gray_pixel_fu_115_rgb_val_g = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = rgb_tmp_r_15_reg_476;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = rgb_tmp_r_14_reg_461;
    end else if (((1'b0 == ap_block_pp0_stage15) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = rgb_tmp_r_13_reg_446;
    end else if (((1'b0 == ap_block_pp0_stage14) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = rgb_tmp_r_12_reg_431;
    end else if (((1'b0 == ap_block_pp0_stage13) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = rgb_tmp_r_11_reg_416;
    end else if (((1'b0 == ap_block_pp0_stage12) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = rgb_tmp_r_10_reg_401;
    end else if (((1'b0 == ap_block_pp0_stage11) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = rgb_tmp_r_9_reg_386;
    end else if (((1'b0 == ap_block_pp0_stage10) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = rgb_tmp_r_8_reg_371;
    end else if (((1'b0 == ap_block_pp0_stage9) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = rgb_tmp_r_7_reg_356;
    end else if (((1'b0 == ap_block_pp0_stage8) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = rgb_tmp_r_6_reg_341;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = rgb_tmp_r_5_reg_326;
    end else if (((1'b0 == ap_block_pp0_stage6) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = rgb_tmp_r_4_reg_311;
    end else if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = rgb_tmp_r_3_reg_296;
    end else if (((1'b0 == ap_block_pp0_stage4) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = rgb_tmp_r_2_reg_281;
    end else if (((1'b0 == ap_block_pp0_stage3) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = rgb_tmp_r_1_reg_266;
    end else if (((1'b0 == ap_block_pp0_stage2) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = rgb_tmp_r_reg_251;
    end else begin
        grp_rgb2gray_pixel_fu_115_rgb_val_r = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln16_fu_155_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        src_TDATA_blk_n = src_TVALID;
    end else begin
        src_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln16_fu_155_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln16_reg_247 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_TREADY = 1'b1;
    end else begin
        src_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter1_stage13) & (ap_idle_pp0_0to0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln16_fu_160_p2 = (indvar_flatten_fu_74 + 60'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp246 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_01001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage10_11001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage10_11001_ignoreCallOp147 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_01001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage11_11001_ignoreCallOp161 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_01001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage12_11001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage12_11001_ignoreCallOp176 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_01001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage13_11001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage13_11001_ignoreCallOp192 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_01001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage14_11001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage14_11001_ignoreCallOp209 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_01001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage15_11001_ignoreCallOp227 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln16_fu_155_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln16_fu_155_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp261 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln16_fu_155_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln16_fu_155_p2 == 1'd0)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_11001_ignoreCallOp71 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_11001_ignoreCallOp77 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_11001_ignoreCallOp84 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage5_11001_ignoreCallOp92 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage6_11001_ignoreCallOp101 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_11001_ignoreCallOp111 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_01001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage8_11001_ignoreCallOp122 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage9_11001_ignoreCallOp134 = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = (((dst_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0_ignore_call83 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0_ignore_call83 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0_ignore_call83 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0_ignore_call83 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0_ignore_call83 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0_ignore_call83 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0_ignore_call83 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state17_pp0_stage0_iter1 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state17_pp0_stage0_iter1_ignore_call83 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

assign ap_block_state18_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter1_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter1_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter1_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter1_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter1_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter1_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter1_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage8_iter1_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage9_iter1_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage10_iter1_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage11_iter1_ignore_call83 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage12_iter1_ignore_call83 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((src_TVALID == 1'b0) & (icmp_ln16_fu_155_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0_ignore_call83 = ((src_TVALID == 1'b0) & (icmp_ln16_fu_155_p2 == 1'd0));
end

assign ap_block_state30_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage13_iter1_ignore_call83 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state31_pp0_stage14_iter1 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state31_pp0_stage14_iter1_ignore_call83 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state32_pp0_stage15_iter1 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state32_pp0_stage15_iter1_ignore_call83 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state33_pp0_stage0_iter2 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state33_pp0_stage0_iter2_ignore_call83 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state34_pp0_stage1_iter2 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state34_pp0_stage1_iter2_ignore_call83 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state35_pp0_stage2_iter2 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state35_pp0_stage2_iter2_ignore_call83 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state36_pp0_stage3_iter2 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state36_pp0_stage3_iter2_ignore_call83 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state37_pp0_stage4_iter2 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state37_pp0_stage4_iter2_ignore_call83 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state38_pp0_stage5_iter2 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state38_pp0_stage5_iter2_ignore_call83 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state39_pp0_stage6_iter2 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state39_pp0_stage6_iter2_ignore_call83 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0_ignore_call83 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state40_pp0_stage7_iter2 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state40_pp0_stage7_iter2_ignore_call83 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state41_pp0_stage8_iter2 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state41_pp0_stage8_iter2_ignore_call83 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state42_pp0_stage9_iter2 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state42_pp0_stage9_iter2_ignore_call83 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state43_pp0_stage10_iter2 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state43_pp0_stage10_iter2_ignore_call83 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state44_pp0_stage11_iter2 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state44_pp0_stage11_iter2_ignore_call83 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state45_pp0_stage12_iter2 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state45_pp0_stage12_iter2_ignore_call83 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state46_pp0_stage13_iter2 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state46_pp0_stage13_iter2_ignore_call83 = (dst_TREADY == 1'b0);
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0_ignore_call83 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0_ignore_call83 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0_ignore_call83 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0_ignore_call83 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0_ignore_call83 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0_ignore_call83 = ((icmp_ln16_reg_247 == 1'd0) & (src_TVALID == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage15;

assign dst_TDATA = grp_rgb2gray_pixel_fu_115_ap_return;

assign dst_TKEEP = 1'd0;

assign dst_TLAST = 1'd0;

assign dst_TSTRB = 1'd0;

assign icmp_ln16_fu_155_p2 = ((indvar_flatten_fu_74 == mul_ln4) ? 1'b1 : 1'b0);

assign rgb_tmp_b_10_fu_211_p1 = src_TDATA[7:0];

assign rgb_tmp_b_11_fu_215_p1 = src_TDATA[7:0];

assign rgb_tmp_b_12_fu_219_p1 = src_TDATA[7:0];

assign rgb_tmp_b_13_fu_223_p1 = src_TDATA[7:0];

assign rgb_tmp_b_14_fu_227_p1 = src_TDATA[7:0];

assign rgb_tmp_b_15_fu_231_p1 = src_TDATA[7:0];

assign rgb_tmp_b_1_fu_175_p1 = src_TDATA[7:0];

assign rgb_tmp_b_2_fu_179_p1 = src_TDATA[7:0];

assign rgb_tmp_b_3_fu_183_p1 = src_TDATA[7:0];

assign rgb_tmp_b_4_fu_187_p1 = src_TDATA[7:0];

assign rgb_tmp_b_5_fu_191_p1 = src_TDATA[7:0];

assign rgb_tmp_b_6_fu_195_p1 = src_TDATA[7:0];

assign rgb_tmp_b_7_fu_199_p1 = src_TDATA[7:0];

assign rgb_tmp_b_8_fu_203_p1 = src_TDATA[7:0];

assign rgb_tmp_b_9_fu_207_p1 = src_TDATA[7:0];

assign rgb_tmp_b_fu_166_p1 = src_TDATA[7:0];

endmodule //top_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2
