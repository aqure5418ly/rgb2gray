// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="top_top,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3772,HLS_SYN_LUT=5719,HLS_VERSION=2022_2}" *)

module top (
        ap_clk,
        ap_rst_n,
        src_TDATA,
        src_TVALID,
        src_TREADY,
        src_TKEEP,
        src_TSTRB,
        src_TLAST,
        dst_TDATA,
        dst_TVALID,
        dst_TREADY,
        dst_TKEEP,
        dst_TSTRB,
        dst_TLAST,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] src_TDATA;
input   src_TVALID;
output   src_TREADY;
input  [3:0] src_TKEEP;
input  [3:0] src_TSTRB;
input  [0:0] src_TLAST;
output  [7:0] dst_TDATA;
output   dst_TVALID;
input   dst_TREADY;
output  [0:0] dst_TKEEP;
output  [0:0] dst_TSTRB;
output  [0:0] dst_TLAST;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] rows;
wire   [31:0] cols;
reg   [31:0] rows_read_reg_150;
wire   [27:0] select_ln16_fu_129_p3;
reg   [27:0] select_ln16_reg_155;
wire    ap_CS_fsm_state2;
wire   [59:0] grp_fu_143_p2;
reg   [59:0] mul_ln4_reg_170;
wire    ap_CS_fsm_state3;
wire    grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_start;
wire    grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_done;
wire    grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_idle;
wire    grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_ready;
wire    grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TREADY;
wire    grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_src_TREADY;
wire   [7:0] grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TDATA;
wire    grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TVALID;
wire   [0:0] grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TKEEP;
wire   [0:0] grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TSTRB;
wire   [0:0] grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TLAST;
reg    grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_start_reg;
wire    ap_CS_fsm_state4;
wire   [31:0] add_ln16_fu_113_p2;
wire   [0:0] empty_fu_107_p2;
wire   [27:0] tmp_fu_119_p4;
wire   [31:0] grp_fu_143_p0;
wire   [27:0] grp_fu_143_p1;
wire    ap_CS_fsm_state5;
wire    regslice_both_dst_V_data_V_U_apdone_blk;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    regslice_both_src_V_data_V_U_apdone_blk;
wire   [31:0] src_TDATA_int_regslice;
wire    src_TVALID_int_regslice;
reg    src_TREADY_int_regslice;
wire    regslice_both_src_V_data_V_U_ack_in;
wire    regslice_both_src_V_keep_V_U_apdone_blk;
wire   [3:0] src_TKEEP_int_regslice;
wire    regslice_both_src_V_keep_V_U_vld_out;
wire    regslice_both_src_V_keep_V_U_ack_in;
wire    regslice_both_src_V_strb_V_U_apdone_blk;
wire   [3:0] src_TSTRB_int_regslice;
wire    regslice_both_src_V_strb_V_U_vld_out;
wire    regslice_both_src_V_strb_V_U_ack_in;
wire    regslice_both_src_V_last_V_U_apdone_blk;
wire   [0:0] src_TLAST_int_regslice;
wire    regslice_both_src_V_last_V_U_vld_out;
wire    regslice_both_src_V_last_V_U_ack_in;
wire    dst_TVALID_int_regslice;
wire    dst_TREADY_int_regslice;
wire    regslice_both_dst_V_data_V_U_vld_out;
wire    regslice_both_dst_V_keep_V_U_apdone_blk;
wire    regslice_both_dst_V_keep_V_U_ack_in_dummy;
wire    regslice_both_dst_V_keep_V_U_vld_out;
wire    regslice_both_dst_V_strb_V_U_apdone_blk;
wire    regslice_both_dst_V_strb_V_U_ack_in_dummy;
wire    regslice_both_dst_V_strb_V_U_vld_out;
wire    regslice_both_dst_V_last_V_U_apdone_blk;
wire    regslice_both_dst_V_last_V_U_ack_in_dummy;
wire    regslice_both_dst_V_last_V_U_vld_out;
wire   [59:0] grp_fu_143_p00;
wire   [59:0] grp_fu_143_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_start_reg = 1'b0;
end

top_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2 grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_start),
    .ap_done(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_done),
    .ap_idle(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_idle),
    .ap_ready(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_ready),
    .src_TVALID(src_TVALID_int_regslice),
    .dst_TREADY(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TREADY),
    .mul_ln4(mul_ln4_reg_170),
    .src_TDATA(src_TDATA_int_regslice),
    .src_TREADY(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_src_TREADY),
    .src_TKEEP(src_TKEEP_int_regslice),
    .src_TSTRB(src_TSTRB_int_regslice),
    .src_TLAST(src_TLAST_int_regslice),
    .dst_TDATA(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TDATA),
    .dst_TVALID(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TVALID),
    .dst_TKEEP(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TKEEP),
    .dst_TSTRB(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TSTRB),
    .dst_TLAST(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TLAST)
);

top_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .rows(rows),
    .cols(cols),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

top_mul_32ns_28ns_60_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 60 ))
mul_32ns_28ns_60_2_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_143_p0),
    .din1(grp_fu_143_p1),
    .ce(1'b1),
    .dout(grp_fu_143_p2)
);

top_regslice_both #(
    .DataWidth( 32 ))
regslice_both_src_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(src_TDATA),
    .vld_in(src_TVALID),
    .ack_in(regslice_both_src_V_data_V_U_ack_in),
    .data_out(src_TDATA_int_regslice),
    .vld_out(src_TVALID_int_regslice),
    .ack_out(src_TREADY_int_regslice),
    .apdone_blk(regslice_both_src_V_data_V_U_apdone_blk)
);

top_regslice_both #(
    .DataWidth( 4 ))
regslice_both_src_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(src_TKEEP),
    .vld_in(src_TVALID),
    .ack_in(regslice_both_src_V_keep_V_U_ack_in),
    .data_out(src_TKEEP_int_regslice),
    .vld_out(regslice_both_src_V_keep_V_U_vld_out),
    .ack_out(src_TREADY_int_regslice),
    .apdone_blk(regslice_both_src_V_keep_V_U_apdone_blk)
);

top_regslice_both #(
    .DataWidth( 4 ))
regslice_both_src_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(src_TSTRB),
    .vld_in(src_TVALID),
    .ack_in(regslice_both_src_V_strb_V_U_ack_in),
    .data_out(src_TSTRB_int_regslice),
    .vld_out(regslice_both_src_V_strb_V_U_vld_out),
    .ack_out(src_TREADY_int_regslice),
    .apdone_blk(regslice_both_src_V_strb_V_U_apdone_blk)
);

top_regslice_both #(
    .DataWidth( 1 ))
regslice_both_src_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(src_TLAST),
    .vld_in(src_TVALID),
    .ack_in(regslice_both_src_V_last_V_U_ack_in),
    .data_out(src_TLAST_int_regslice),
    .vld_out(regslice_both_src_V_last_V_U_vld_out),
    .ack_out(src_TREADY_int_regslice),
    .apdone_blk(regslice_both_src_V_last_V_U_apdone_blk)
);

top_regslice_both #(
    .DataWidth( 8 ))
regslice_both_dst_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TDATA),
    .vld_in(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TVALID),
    .ack_in(dst_TREADY_int_regslice),
    .data_out(dst_TDATA),
    .vld_out(regslice_both_dst_V_data_V_U_vld_out),
    .ack_out(dst_TREADY),
    .apdone_blk(regslice_both_dst_V_data_V_U_apdone_blk)
);

top_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dst_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TKEEP),
    .vld_in(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TVALID),
    .ack_in(regslice_both_dst_V_keep_V_U_ack_in_dummy),
    .data_out(dst_TKEEP),
    .vld_out(regslice_both_dst_V_keep_V_U_vld_out),
    .ack_out(dst_TREADY),
    .apdone_blk(regslice_both_dst_V_keep_V_U_apdone_blk)
);

top_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dst_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TSTRB),
    .vld_in(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TVALID),
    .ack_in(regslice_both_dst_V_strb_V_U_ack_in_dummy),
    .data_out(dst_TSTRB),
    .vld_out(regslice_both_dst_V_strb_V_U_vld_out),
    .ack_out(dst_TREADY),
    .apdone_blk(regslice_both_dst_V_strb_V_U_apdone_blk)
);

top_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dst_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TLAST),
    .vld_in(grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TVALID),
    .ack_in(regslice_both_dst_V_last_V_U_ack_in_dummy),
    .data_out(dst_TLAST),
    .vld_out(regslice_both_dst_V_last_V_U_vld_out),
    .ack_out(dst_TREADY),
    .apdone_blk(regslice_both_dst_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_start_reg <= 1'b1;
        end else if ((grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_ready == 1'b1)) begin
            grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mul_ln4_reg_170 <= grp_fu_143_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        rows_read_reg_150 <= rows;
        select_ln16_reg_155 <= select_ln16_fu_129_p3;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_dst_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (regslice_both_dst_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (regslice_both_dst_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        src_TREADY_int_regslice = grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_src_TREADY;
    end else begin
        src_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (regslice_both_dst_V_data_V_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln16_fu_113_p2 = (cols + 32'd15);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign dst_TVALID = regslice_both_dst_V_data_V_U_vld_out;

assign dst_TVALID_int_regslice = grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TVALID;

assign empty_fu_107_p2 = (($signed(cols) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_fu_143_p0 = grp_fu_143_p00;

assign grp_fu_143_p00 = rows_read_reg_150;

assign grp_fu_143_p1 = grp_fu_143_p10;

assign grp_fu_143_p10 = select_ln16_reg_155;

assign grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_start = grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_ap_start_reg;

assign grp_top_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_17_2_fu_86_dst_TREADY = (dst_TREADY_int_regslice & ap_CS_fsm_state4);

assign select_ln16_fu_129_p3 = ((empty_fu_107_p2[0:0] == 1'b1) ? tmp_fu_119_p4 : 28'd0);

assign src_TREADY = regslice_both_src_V_data_V_U_ack_in;

assign tmp_fu_119_p4 = {{add_ln16_fu_113_p2[31:4]}};

endmodule //top
